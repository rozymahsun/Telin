package sg.telin.backend.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import sg.telin.backend.dao.ProductMapDao;
import sg.telin.backend.model.ProductMap;

import com.felees.hbnpojogen.persistence.impl.GenericHibernateDaoImpl;
 
 
/**
 * DAO for table: ProductMap.
 * @author autogenerated
 */
@Repository
public class ProductMapDaoImpl extends GenericHibernateDaoImpl<ProductMap, Integer> implements ProductMapDao {
	
	/** Constructor method. */
		public ProductMapDaoImpl() {
			super(ProductMap.class);
		}

	@Override
	public Criteria createCriteria() {
		return getSession().createCriteria(this.getPersistentClass());
	}
	
	public List<ProductMap> findByObject(ProductMap o){
		Criteria criteria = createCriteria();
		if(o.getProductMapCategory()!=null)
			criteria.add(Restrictions.like("productMapCategory","%" + o.getProductMapCategory() + "%"));
		if(o.getProductGroup()!=null)
			criteria.add(Restrictions.like("productGroup","%" + o.getProductGroup() + "%"));
		if(o.getProdcutMapUnit()!=null)
			criteria.add(Restrictions.like("prodcutMapUnit","%" + o.getProdcutMapUnit() + "%"));
		if(o.getStdListPrice()!=null)
			criteria.add(Restrictions.like("stdListPrice","%" + o.getStdListPrice() + "%"));
		if(o.getLicenseFee()!=null)
			criteria.add(Restrictions.like("licenseFee","%" + o.getLicenseFee() + "%"));
		if(o.getRevGlCode()!=null)
			criteria.add(Restrictions.like("revGlCode","%" + o.getRevGlCode() + "%"));
		if(o.getProductCode()!=null)
			criteria.add(Restrictions.like("productCode","%" + o.getProductCode() + "%"));
		if(o.getMainProduct()!=null)
			criteria.add(Restrictions.like("mainProduct","%" + o.getMainProduct() + "%"));
		
		return criteria.list();
			
	}
	}

